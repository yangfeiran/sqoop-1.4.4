
////
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
////


Import control options
~~~~~~~~~~~~~~~~~~~~~~

--append::
  Append data to an existing HDFS dataset

--as-avrodatafile::
  Imports data to Avro Data Files

--as-sequencefile::
  Imports data to SequenceFiles

--as-textfile::
  Imports data as plain text (default)

--boundary-query (query)::
  Using following query to select minimal and maximal value of '--split-by' column for creating splits

--columns (col,col,col...)::
  Columns to export from table

--direct::
  Use direct import fast path (MySQL and PostgreSQL)

--direct-split-size (n)::
  Split the input stream every 'n' bytes when importing in direct mode.

--inline-lob-limit (n)::
  Set the maximum size for an inline LOB

--num-mappers (n)::
-m::
  Use 'n' map tasks to import in parallel

--query (statement)::
  Imports the results of +statement+ instead of a table

--split-by (column-name)::
  Column of the table used to split the table for parallel import

--table (table-name)::
  The table to import

--target-dir (dir)::
  Explicit HDFS target directory for the import.

--warehouse-dir (dir)::
  Tables are uploaded to the HDFS path +/warehouse/dir/(tablename)/+

--where (clause)::
  Import only the rows for which _clause_ is true.
  e.g.: `--where "user_id > 400 AND hidden == 0"`

--compress::
-z::
  Uses gzip (or, alternatively, the codec specified by +\--compression-codec+,
  if set) to compress data as it is written to HDFS

--compression-codec (codec)::
  Uses the Hadoop +codec+ class to compress data as it is written to HDFS.

--null-string::
  The string to be written for a null value for string columns

--null-non-string::
  The string to be written for a null value for non-string columns
